apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: deployment-controller
rules:
  - apiGroups: [devbot.kfirs.com]
    resources: [applications]
    verbs: [get, list, watch]
  - apiGroups: [devbot.kfirs.com]
    resources: [deployments]
    verbs: [get, list, patch, update, watch]
  - apiGroups: [devbot.kfirs.com]
    resources: [deployments/status]
    verbs: [create, delete, get, patch, update]
  - apiGroups: [devbot.kfirs.com]
    resources: [environments]
    verbs: [get, list, watch]
  - apiGroups: [devbot.kfirs.com]
    resources: [githubrepositories]
    verbs: [get, list, watch]
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    iam.gke.io/gcp-service-account: deployment-controller@arikkfir.iam.gserviceaccount.com
  labels:
    app.kubernetes.io/component: deployment-controller
  name: deployment-controller
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app.kubernetes.io/component: deployment-controller
  name: deployment-controller
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: deployment-controller
subjects:
  - kind: ServiceAccount
    name: deployment-controller
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  labels:
    app.kubernetes.io/component: deployment-controller
  name: deployment-controller-leader-election
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: leader-election
subjects:
  - kind: ServiceAccount
    name: deployment-controller
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/component: deployment-controller
    app.kubernetes.io/component-type: controller
    app.kubernetes.io/std-logger: "true"
  name: deployment-controller
spec:
  selector:
    matchLabels:
      app.kubernetes.io/component: deployment-controller
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app.kubernetes.io/component: deployment-controller
    spec:
      containers:
        - image: ghcr.io/arikkfir/devbot/deployment-controller
          args: []
          name: deployment-controller
          ports:
            - containerPort: 8000
              name: metrics
            - containerPort: 9000
              name: health
          resources:
            limits:
              cpu: 50m
              memory: 32Mi
            requests:
              cpu: 50m
              memory: 32Mi
          volumeMounts:
            - mountPath: /data
              name: git-workspace
      enableServiceLinks: false
      serviceAccountName: deployment-controller
      volumes:
        - name: git-workspace
          ephemeral:
            volumeClaimTemplate:
              spec:
                accessModes:
                  - ReadWriteOnce
                resources:
                  requests:
                    storage: 5Gi
                  limits:
                    storage: 20Gi
                volumeMode: Filesystem
