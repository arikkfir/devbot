apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app.kubernetes.io/component: redis
  name: redis
---
apiVersion: v1
kind: Service
metadata:
  name: redis
spec:
  ports:
    - name: client-nontls
      port: 6379
      protocol: TCP
      targetPort: client-nontls
  type: ClusterIP
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: redis
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
    limits:
      storage: 1Gi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/component: redis
  name: redis
spec:
  selector:
    matchLabels:
      app.kubernetes.io/component: redis
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app.kubernetes.io/component: redis
    spec:
      containers:
        - image: redis/redis-stack-server:7.2.0-v2
          name: redis
          livenessProbe:
            exec:
              command:
                - bash
                - -c
                - '[[ "$(redis-cli PING)" == "PONG" ]]'
            successThreshold: 1
            failureThreshold: 3
            periodSeconds: 10
            terminationGracePeriodSeconds: 60
            timeoutSeconds: 5
          ports:
            - containerPort: 6379
              name: client-nontls
          readinessProbe:
            exec:
              command:
                - bash
                - -c
                - '[[ "$(redis-cli PING)" == "PONG" ]]'
            successThreshold: 1
            failureThreshold: 3
            periodSeconds: 1
            timeoutSeconds: 1
          resources:
            limits:
              cpu: 250m
              memory: 64Mi
            requests:
              cpu: 250m
              memory: 64Mi
          startupProbe:
            exec:
              command:
                - bash
                - -c
                - '[[ "$(redis-cli PING)" == "PONG" ]]'
            failureThreshold: 5
            initialDelaySeconds: 2
            periodSeconds: 1
            terminationGracePeriodSeconds: 60
            timeoutSeconds: 5
          volumeMounts:
            - mountPath: /data
              name: data
              readOnly: false
      enableServiceLinks: false
      serviceAccountName: redis
      volumes:
        - name: data
          persistentVolumeClaim:
            claimName: redis
            readOnly: false
