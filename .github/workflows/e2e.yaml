name: End-to-end Tests

on:
  workflow_run:
    workflows: [Build]
    types: [completed]

defaults:
  run:
    shell: bash --noprofile --norc -e -u -x -o pipefail {0}

jobs:

  e2e:
    runs-on: ubuntu-latest
    if: github.event.workflow_run.conclusion == 'success'
    steps:
      - uses: actions/github-script@v7
        id: metadata
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            console.info(JSON.stringify(context, null, 4))
            let prNumber = context.payload.workflow_run.pull_requests[0].number
            const labels = await github.rest.issues.listLabelsOnIssue({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: prNumber
            });
            core.setOutput('clusterName', `kind-${prNumber}-${context.runNumber}-${context.runAttempt}`)
            core.setOutput("deployGroundCover", labels.data.some(label => label.name === "deploy-groundcover"));
            core.setOutput("slowdownTestsFactor", labels.data.some(label => label.name === "slowdown-tests") ? 10 : 1);
      - uses: helm/kind-action@v1
        with:
          cluster_name: ${{ steps.metadata.outputs.clusterName }}
          version: v0.23.0
      - uses: azure/setup-helm@v4
        with:
          version: v3.15.2
      - run: echo -n ${GITHUB_TOKEN} | helm registry login ghcr.io --username ${{ github.actor }} --password-stdin
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - run: |
          helm repo add groundcover https://helm.groundcover.com
          helm repo update groundcover
          helm install groundcover groundcover/groundcover \
            --create-namespace \
            --namespace groundcover \
            --set global.groundcover_token=${GROUNDCOVER_API_KEY},clusterId=${CLUSTER_NAME}
          kubectl wait pod --all --for=condition=Ready --namespace=groundcover --timeout=5m
        if: steps.metadata.outputs.deployGroundCover == 'true'
        env:
          CLUSTER_NAME: ${{ steps.metadata.outputs.clusterName }}
          GROUNDCOVER_API_KEY: ${{ secrets.GROUNDCOVER_API_KEY }}
      - run: helm install --create-namespace devbot oci://ghcr.io/arikkfir/devbot --version 0.0.0+${PR_SHA}
        env:
          PR_SHA: ${{ github.event.workflow_run.head_sha }}
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.event.workflow_run.head_sha }}
      - uses: actions/setup-go@v5
        with:
          go-version-file: go.mod
      - run: go mod download -x
      - run: go test ./e2e -run TestRepositoryRefreshIntervalParsing
        id: test
        env:
          GITHUB_TOKEN: ${{ secrets.PAT }}
          JUSTEST_SLOW_FACTOR: ${{ steps.metadata.outputs.slowdownTestsFactor }}
