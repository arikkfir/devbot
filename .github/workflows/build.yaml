name: Build

on:
  push:
    branches: [main]
    tags: [v*]
  pull_request:
    types: [ opened, reopened, synchronize ]

defaults:
  run:
    shell: bash --noprofile --norc -e -u -x -o pipefail {0}

jobs:

  build-images:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: true
      matrix:
        image: [ apply-job, bake-job, clone-job, controller, github-webhook ]
    steps:
      - uses: actions/checkout@v4
      - uses: docker/setup-qemu-action@v3
      - uses: docker/setup-buildx-action@v3
      - uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - uses: docker/metadata-action@v5
        id: meta
        with:
          images: ghcr.io/arikkfir/devbot/${{ matrix.image }}
          tags: |
            type=semver,pattern=v{{major}}
            type=semver,pattern=v{{major}}.{{minor}}
            type=semver,pattern=v{{major}}.{{minor}}.{{patch}}
            type=semver,pattern=v{{version}}
            type=sha,format=long            
            type=sha,format=short
      - uses: docker/build-push-action@v5
        with:
          annotations: ${{ steps.meta.outputs.annotations }}
          build-args: |
            APPLY_JOB=ghcr.io/arikkfir/devbot/apply-job:sha-${{ github.sha }}
            BAKE_JOB=ghcr.io/arikkfir/devbot/bake-job:sha-${{ github.sha }}
            CLONE_JOB=ghcr.io/arikkfir/devbot/clone-job:sha-${{ github.sha }}
            VERSION=0.0.0+${{ github.sha }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          context: backend
          file: backend/Dockerfile.${{ matrix.image }}
          platforms: linux/amd64
          push: true
          tags: ${{ steps.meta.outputs.tags }}

  build-devctl:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: true
      matrix:
        arch: [ amd64, arm64 ]
        os: [ darwin, linux ]
    outputs:
      linux-amd64-id: "${{ steps.artifact.outputs.linux-amd64-id }}"
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          cache-dependency-path: backend/go.sum
          go-version-file: backend/go.mod
      - run: go mod download -x
        working-directory: backend
      - run: |
          go build \
            -gcflags="${GO_GCFLAGS}" \
            -ldflags "${LDFLAGS}" \
            -o devctl-${GOOS}-${GOARCH} \
            cmd/devctl/main.go
        working-directory: backend
        env:
          CGO_ENABLED: "0"
          GOOS: ${{ matrix.os }}
          GOARCH: ${{ matrix.arch }}
          GO_GCFLAGS: ""
          LDFLAGS: "-X github.com/arikkfir/devbot/backend/internal/util/version.Version=0.0.0+${{ github.sha }}"
      - uses: actions/upload-artifact@v4
        id: upload
        with:
          name: devctl-${{ matrix.os }}-${{ matrix.arch }}
          path: backend/devctl-${{ matrix.os }}-${{ matrix.arch }}
          if-no-files-found: error
          retention-days: 7
          compression-level: 0
      - run: echo "${GOOS}-${GOARCH}-id=${{ steps.upload.outputs.artifact-id }}" >> "$GITHUB_OUTPUT"
        id: artifact
        env:
          GOOS: ${{ matrix.os }}
          GOARCH: ${{ matrix.arch }}

  call-e2e:
    uses: ./.github/workflows/e2e.yaml
    needs: [build-images, build-devctl]
    secrets:
      GROUNDCOVER_API_KEY: ${{ secrets.GROUNDCOVER_API_KEY }}
      PAT: ${{ secrets.PAT }}
    with:
      devctl-artifact-id: "${{ needs.build-devctl.outputs.linux-amd64-id }}"
