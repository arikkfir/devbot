# syntax=docker/dockerfile:1

FROM alpine:3.19 as kubectl
ARG KUBECTL_VERSION="v1.29.3"
WORKDIR /workspace
RUN apk --no-cache add curl
RUN curl -sSL -o kubectl "https://dl.k8s.io/release/${KUBECTL_VERSION}/bin/linux/amd64/kubectl" && chmod +x kubectl

FROM golang:1.22.3 as builder

# Compiler arguments:
#   - Custom Go flags are meant for additional flags, usually set in our Skaffold configuration to disable optimizations
#   - Skaffold Go flags are sent by Skaffold to enable debugging, when debugging
#   - Target OS and arch are used to control the Go build output
ARG CUSTOM_GO_GCFLAGS=""
ARG SKAFFOLD_GO_GCFLAGS=""
ARG TARGETOS="linux"
ARG TARGETARCH

# Application variables
ARG VERSION="0.0.0+local"

WORKDIR /workspace
COPY go.mod go.mod
COPY go.sum go.sum
RUN --mount=type=cache,target=/root/.cache/go-build --mount=type=cache,target=/go/pkg/mod go mod download

COPY api api/
COPY cmd/deployment-apply/main.go cmd/deployment-apply/
COPY internal/util/logging/configure.go internal/util/logging/
COPY internal/util/logging/init_hook.go internal/util/logging/
COPY internal/util/logging/sentry_init.go internal/util/logging/
COPY internal/util/logging/zerolog_logr_adapter.go internal/util/logging/
COPY internal/util/version/version.go internal/util/version/
RUN --mount=type=cache,target=/root/.cache/go-build --mount=type=cache,target=/go/pkg/mod \
    CGO_ENABLED=0 GOOS=${TARGETOS} GOARCH=${TARGETARCH} \
    go build \
      -gcflags="${CUSTOM_GO_GCFLAGS} ${SKAFFOLD_GO_GCFLAGS}" \
      -ldflags "-X github.com/arikkfir/devbot/backend/internal/util/version.Version=${VERSION}" \
      -o deployment-apply \
      cmd/deployment-apply/main.go

FROM gcr.io/distroless/static:nonroot
WORKDIR /
COPY --from=builder /workspace/deployment-apply /usr/local/bin/
COPY --from=kubectl /workspace/kubectl /usr/local/bin/
USER 65532:65532
ENV GOTRACEBACK=single
ENTRYPOINT ["/usr/local/bin/deployment-apply"]
