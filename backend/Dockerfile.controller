# syntax=docker/dockerfile:1

FROM golang:1.22 as builder

# no default value, to default to the environment's architecture (e.g. linux/amd64)
ARG TARGETOS="linux"
ARG TARGETARCH
ARG APPLY_JOB
ARG BAKE_JOB
ARG CLONE_JOB

# When running in Skaffold, this variable is going to be provided by it to enable/disable debugging and other features
# When running elsewhere (e.g. GitHub Actions), the default value is going to be used
ARG CUSTOM_GO_GCFLAGS=""
ARG SKAFFOLD_GO_GCFLAGS=""
ARG VERSION="0.0.0-local+unknown"

WORKDIR /workspace
COPY go.mod go.mod
COPY go.sum go.sum
RUN --mount=type=cache,target=/go/pkg go mod download

COPY api api/
COPY cmd/controller/main.go cmd/controller/
COPY internal/controller/application_controller.go internal/controller/
COPY internal/controller/config.go internal/controller/
COPY internal/controller/deployment_controller.go internal/controller/
COPY internal/controller/environment_controller.go internal/controller/
COPY internal/controller/phase.go internal/controller/
COPY internal/controller/repository_controller.go internal/controller/
COPY internal/util/k8s/conditions.go internal/util/k8s/
COPY internal/util/k8s/owned_by.go internal/util/k8s/
COPY internal/util/k8s/reconciliation.go internal/util/k8s/
COPY internal/util/k8s/result.go internal/util/k8s/
COPY internal/util/k8s/status.go internal/util/k8s/
COPY internal/util/lang/duration.go internal/util/lang/
COPY internal/util/lang/pointers.go internal/util/lang/
COPY internal/util/logging/initialization.go internal/util/logging/
COPY internal/util/logging/zerolog_logr_adapter.go internal/util/logging/
COPY internal/util/strings/hash.go internal/util/strings/
COPY internal/util/strings/names.go internal/util/strings/
COPY internal/util/strings/slug.go internal/util/strings/
RUN --mount=type=cache,target=/go/pkg \
    CGO_ENABLED=0 GOOS=${TARGETOS} GOARCH=${TARGETARCH} \
    go build \
      -gcflags="${CUSTOM_GO_GCFLAGS} ${SKAFFOLD_GO_GCFLAGS}" \
      -ldflags "-X main.Version=${VERSION} -X github.com/arikkfir/devbot/backend/internal/controller.ApplyJobImage=${APPLY_JOB} -X github.com/arikkfir/devbot/backend/internal/controller.BakeJobImage=${BAKE_JOB} -X github.com/arikkfir/devbot/backend/internal/controller.CloneJobImage=${CLONE_JOB}" \
      -a -o controller cmd/controller/main.go

FROM gcr.io/distroless/static:nonroot
WORKDIR /
COPY --from=builder /workspace/controller /usr/local/bin/
USER 65532:65532
ENV GOTRACEBACK=single
ENTRYPOINT ["/usr/local/bin/controller"]
