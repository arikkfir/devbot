# syntax=docker/dockerfile:1

FROM alpine:3.19 as kustomize
ARG KUSTOMIZE_VERSION="v5.3.0"
WORKDIR /workspace
RUN apk --no-cache add curl
RUN curl -sSL "https://github.com/kubernetes-sigs/kustomize/releases/download/kustomize%2F${KUSTOMIZE_VERSION}/kustomize_${KUSTOMIZE_VERSION}_linux_amd64.tar.gz" | tar xzf -

FROM alpine:3.19 as yq
ARG YQ_VERSION="v4.40.7"
WORKDIR /workspace
RUN apk --no-cache add curl
RUN curl -sSL -o yq "https://github.com/mikefarah/yq/releases/download/${YQ_VERSION}/yq_linux_amd64" && chmod +x yq

FROM alpine:3.19 as kubectl
ARG KUBECTL_VERSION="v1.29.3"
WORKDIR /workspace
RUN apk --no-cache add curl
RUN curl -sSL -o kubectl "https://dl.k8s.io/release/${KUBECTL_VERSION}/bin/linux/amd64/kubectl" && chmod +x kubectl

FROM golang:1.22 as builder
ARG TARGETOS
# no default value, to default to the environment's architecture (e.g. linux/amd64)
ARG TARGETARCH
ARG SKAFFOLD_GO_GCFLAGS="all=-N -l"
WORKDIR /workspace
COPY go.mod go.mod
COPY go.sum go.sum
RUN --mount=type=cache,target=/go/pkg go mod download
COPY api api/
COPY cmd/deployment-apply/main.go cmd/deployment-apply/
COPY cmd/deployment-bake/main.go cmd/deployment-bake/
COPY cmd/deployment-clone/main.go cmd/deployment-clone/
COPY cmd/deployment-controller/main.go cmd/deployment-controller/
COPY internal/config/base.go internal/config/
COPY internal/controllers/config.go internal/controllers/
COPY internal/controllers/deployment/controller.go internal/controllers/deployment/
COPY internal/controllers/deployment/phase.go internal/controllers/deployment/
COPY internal/util/configuration/parse.go internal/util/configuration/
COPY internal/util/k8s/conditions.go internal/util/k8s/
COPY internal/util/k8s/owned_by.go internal/util/k8s/
COPY internal/util/k8s/reconciliation.go internal/util/k8s/
COPY internal/util/k8s/result.go internal/util/k8s/
COPY internal/util/k8s/status.go internal/util/k8s/
COPY internal/util/lang/duration.go internal/util/lang/
COPY internal/util/lang/pointers.go internal/util/lang/
COPY internal/util/logging/initialization.go internal/util/logging/
COPY internal/util/logging/zerolog_logr_adapter.go internal/util/logging/
COPY internal/util/strings/buffer_async_lines_extractor.go internal/util/strings/
COPY internal/util/strings/hash.go internal/util/strings/
COPY internal/util/strings/names.go internal/util/strings/
COPY internal/util/strings/slug.go internal/util/strings/
RUN --mount=type=cache,target=/go/pkg \
    CGO_ENABLED=0 GOOS=${TARGETOS:-linux} GOARCH=${TARGETARCH} \
    go build \
      -gcflags="${SKAFFOLD_GO_GCFLAGS}" \
      -a -o deployment-apply \
      cmd/deployment-apply/main.go
RUN --mount=type=cache,target=/go/pkg \
    CGO_ENABLED=0 GOOS=${TARGETOS:-linux} GOARCH=${TARGETARCH} \
    go build \
      -gcflags="${SKAFFOLD_GO_GCFLAGS}" \
      -a -o deployment-bake \
      cmd/deployment-bake/main.go
RUN --mount=type=cache,target=/go/pkg \
    CGO_ENABLED=0 GOOS=${TARGETOS:-linux} GOARCH=${TARGETARCH} \
    go build \
      -gcflags="${SKAFFOLD_GO_GCFLAGS}" \
      -a -o deployment-clone \
      cmd/deployment-clone/main.go
RUN --mount=type=cache,target=/go/pkg \
    CGO_ENABLED=0 GOOS=${TARGETOS:-linux} GOARCH=${TARGETARCH} \
    go build \
      -gcflags="${SKAFFOLD_GO_GCFLAGS}" \
      -a -o deployment-controller \
      cmd/deployment-controller/main.go

FROM gcr.io/distroless/static:nonroot
WORKDIR /
COPY --from=builder /workspace/deployment-apply /usr/local/bin/
COPY --from=builder /workspace/deployment-bake /usr/local/bin/
COPY --from=builder /workspace/deployment-clone /usr/local/bin/
COPY --from=builder /workspace/deployment-controller /usr/local/bin/
COPY --from=kustomize /workspace/kustomize /usr/local/bin/
COPY --from=yq /workspace/yq /usr/local/bin/
COPY --from=kubectl /workspace/kubectl /usr/local/bin/
USER 65532:65532
ENV GOTRACEBACK=single
ENTRYPOINT ["/usr/local/bin/deployment-controller"]
